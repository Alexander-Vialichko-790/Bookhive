from celery import shared_task
from django.core.mail import send_mail
from django.contrib.auth import get_user_model
from store.models import Order

@shared_task
def send_order_status_update_email(order_id):
    try:
        order = Order.objects.get(id=order_id)
        user = order.user

        subject = f'–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞ –∑–∞–∫–∞–∑–∞ ‚Ññ{order.id}'
        message = f'–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, {user.first_name or user.username}!\n\n' \
                  f'–°—Ç–∞—Ç—É—Å –≤–∞—à–µ–≥–æ –∑–∞–∫–∞–∑–∞ –æ–±–Ω–æ–≤–ª—ë–Ω: {order.get_status_display()}.\n\n' \
                  f'–°–ø–∞—Å–∏–±–æ, —á—Ç–æ –≤—ã–±—Ä–∞–ª–∏ BookHive!'

        send_mail(
            subject,
            message,
            None,  # –∏–∑ settings.DEFAULT_FROM_EMAIL
            [user.email],
            fail_silently=False
        )
    except Order.DoesNotExist:
        pass

@shared_task
def send_weekly_discount_emails():
    from store.models import Book, Profile
    from django.core.mail import send_mail

    discounted_books = Book.objects.filter(discount__gt=0)[:5]  # –ø–µ—Ä–≤—ã–µ 5 —Å–æ —Å–∫–∏–¥–∫–æ–π
    if not discounted_books:
        return

    book_list = "\n".join(
        [f"- {book.title} ({book.discount}%) ‚Äî {book.discounted_price} ‚ÇΩ" for book in discounted_books]
    )

    subject = "üî• –ù–æ–≤—ã–µ —Å–∫–∏–¥–∫–∏ –≤ BookHive!"
    message = f"–ü—Ä–∏–≤–µ—Ç! –í–æ—Ç —Å–ø–∏—Å–æ–∫ –∫–Ω–∏–≥ —Å–æ —Å–∫–∏–¥–∫–æ–π:\n\n{book_list}\n\n–ó–∞–≥–ª—è–Ω–∏ –Ω–∞ —Å–∞–π—Ç, –ø–æ–∫–∞ –≤—Å—ë –Ω–µ —Ä–∞–∑–æ–±—Ä–∞–ª–∏!"

    for profile in Profile.objects.filter(subscribed_to_discounts=True).select_related('user'):
        if profile.user.email:
            send_mail(
                subject,
                message,
                None,
                [profile.user.email],
                fail_silently=True
            )


from celery import shared_task
from datetime import datetime

@shared_task
def ping():
    print(f"[{datetime.now()}] üîî Ping –æ—Ç Celery. –í—Å—ë —Ä–∞–±–æ—Ç–∞–µ—Ç!")

